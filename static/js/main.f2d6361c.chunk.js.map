{"version":3,"sources":["components/container/Container.module.css","components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/contactEditor/ContactEditor.module.css","components/container/Container.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/contactEditor/ContactEditor.js","components/filter/Filter.js","components/contactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","container","wrapper","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getFilter","state","contacts","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactEditor","useState","setName","number","setNumber","dispatch","useDispatch","filteredContacts","useSelector","handleChange","e","currentTarget","value","resetForm","nameId","shortid","generate","numberId","contactEditor_form","onSubmit","preventDefault","find","alert","post","then","data","catch","error","addNewContact","label","htmlFor","placeholder","type","id","pattern","title","onChange","autoComplete","required","add_contact","Filter","contact_search","filter_input","ContactList","onDeleteContact","delete","deleteContact","useEffect","a","get","length","map","contactItem","contactDelete","onClick","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d6361c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__30vYF\",\"wrapper\":\"Container_wrapper__3jw96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_search\":\"Filter_contact_search__11FUj\",\"filter_input\":\"Filter_filter_input__Fq9vf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__2RAzX\",\"contactDelete\":\"ContactList_contactDelete__2JGbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactEditor_form\":\"ContactEditor_contactEditor_form__2inlS\",\"label\":\"ContactEditor_label__3_23Q\",\"placeholder\":\"ContactEditor_placeholder__1YOia\",\"add_contact\":\"ContactEditor_add_contact__1eSBw\"};","import React from 'react';\nimport { container, wrapper } from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={container}>\n    <div className={wrapper}>{children}</div>\n  </div>\n);\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactsContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactsContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactsContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\r\n\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactsError)\r\n    }\r\n};\r\n\r\nexport const addNewContact = (contacts, name, number) => dispatch => {\r\n   const savedContact = contacts.find(contact => contact.name === name);\r\n    if (savedContact) {\r\n      alert(`${name} is already in contacts`);\r\n        return;\r\n    }\r\n\r\n    const savedNumber = contacts.find(\r\n      contact => contact.number === number,\r\n    );\r\n\r\n    if (savedNumber) {\r\n      alert(`${number} has already been saved`);\r\n        return;\r\n    }\r\n    dispatch(addContactRequest());\r\n\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n    \r\n    axios.post('/contacts', contact).then(({ data }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n    axios.delete(`/contacts/${id}`).then(() => dispatch(deleteContactSuccess(id))).catch(error => dispatch(deleteContactError(error)));\r\n}\r\n","import { createSelector } from 'reselect';\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\nexport const isLoading = state => state.contacts.loading;\nexport const error = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n},);\n\n// export const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact => contact.name.includes(normalizedFilter));\n// };\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {addNewContact} from 'redux/contacts/contacts-operations';\nimport { getVisibleContacts } from 'redux/contacts/contacts-selectors';\n\nimport shortid from 'shortid';\nimport {\n  contactEditor_form,\n  placeholder,\n  label,\n  add_contact,\n} from './ContactEditor.module.css';\n\nexport default function ContactEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(getVisibleContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addNewContact(filteredContacts, name, number));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameId = shortid.generate();\n  const numberId = shortid.generate();\n\n  return (\n    <form className={contactEditor_form} onSubmit={handleSubmit}>\n      <label className={label} htmlFor={nameId} aria-label=\"Name\">\n        Name\n      </label>\n      <input\n        className={placeholder}\n        type=\"text\"\n        id={nameId}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={handleChange}\n        placeholder=\"Enter a name\"\n        autoComplete=\"off\"\n        value={name}\n        required\n      />\n      <label className={label} htmlFor={numberId} aria-label=\"Number\">\n        Phone number\n      </label>\n      <input\n        className={placeholder}\n        type=\"tel\"\n        placeholder=\"Enter a phone number\"\n        autoComplete=\"off\"\n        id={numberId}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <button type=\"submit\" className={add_contact}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {changeFilter} from 'redux/contacts/contacts-actions';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\n\nimport { filter_input, contact_search } from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={contact_search}>\n      Find contact by name\n      <input\n        className={filter_input}\n        type=\"text\"\n        value={filter}\n        onChange={e =>\n          dispatch(changeFilter(e.currentTarget.value))\n        }\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts} from 'redux/contacts/contacts-selectors';\nimport {deleteContact, fetchContacts }from 'redux/contacts/contacts-operations';\n\nimport { contactItem, contactDelete } from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch]);\n\n  return (\n    <ul className=\"contactList\">\n     \n      \n      {contacts.length > 0 && contacts.map(({ id, name, number }) => (\n        <li key={id} className={contactItem}>\n          <span>\n            {name}: {number}\n          </span>\n          {/* <span>{number}</span>  */}\n          <button\n            type=\"button\"\n            className={contactDelete}\n            onClick={() => onDeleteContact(id)}\n          ></button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import Container from './components/container';\nimport ContactEditor from './components/contactEditor/';\nimport Filter from './components/filter';\nimport ContactList from './components/contactList/';\n\nexport default function App() {\n  // const initialContacts = [\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ];\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactEditor />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n  deleteContactError,\n    changeFilter\n} from './contacts-actions';\n\nconst contacts = createReducer([], {\n  [addContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, {payload}) => state.filter(({id}) => id !== payload),\n});\n\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  loading,\n  filter,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        \n          <App />\n        \n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}